CPSC411 - Assignemt 
Delei Yu, 10061950

Compile and Run:
1. run "make"
3. run  ./run_parser.sh tests/t1.m+

Sample Output:

[dyu@localhost A5]$ make
javac -cp java_cup-runtime.jar *java

[dyu@localhost A5]$ ./run_parser.sh tests/t5.m+

[dyu@localhost A5]$ ./run_parser.sh tests/t5.m+
Parsing [tests/t5.m+]

AST: 
M_prog (
	M_block[M_var("a", [], M_int)M_var("b", [], M_int)M_var("c", [], M_int)]
	,[M_read ("a")M_read ("b")M_read ("c")	M_block[M_var("x", [M_app (M_id ("a",)M_app (M_id ("b",)M_app (M_id ("c",)], M_int)M_var("s", [3], M_int)M_var("r", [], M_int)
		M_fun("fill", ["y"M_int],M_int,[M_var("i", [], M_int)M_var("j", [], M_int)M_var("k", [], M_int)]
			,[M_ass ("s"0,M_app (M_size "y",))M_ass ("s"1,M_app (M_size "y",))M_ass ("s"2,M_app (M_size "y",))M_ass ("i",0)M_while (M_app (M_lt,M_app (M_id ("i",),M_app (M_id ("s",0)),	M_block[]
	,[M_ass ("j",0)M_while (M_app (M_lt,M_app (M_id ("j",),M_app (M_id ("s",1)),	M_block[]
	,[M_ass ("k",0)M_while (M_app (M_lt,M_app (M_id ("k",),M_app (M_id ("s",2)),	M_block[]
	,[M_ass ("y"M_app (M_id ("i",)M_app (M_id ("j",)M_app (M_id ("k",),M_app (M_add,M_app (M_add,M_app (M_id ("k",),M_app (M_mul,M_app (M_id ("j",),M_app (M_id ("s",2))),M_app (M_mul,M_app (M_mul,M_app (M_id ("i",),M_app (M_id ("s",1)),M_app (M_id ("s",2))))M_app (M_id ("y",M_app (M_id ("i",)M_app (M_id ("j",)M_app (M_id ("k",))M_ass ("k",M_app (M_add,M_app (M_id ("k",),1))])M_ass ("j",M_app (M_add,M_app (M_id ("j",),1))])M_ass ("i",M_app (M_add,M_app (M_id ("i",),1))])0])]
	,[M_ass ("r",M_app (M_id ("fill",M_app (M_id ("x",)))]])

Checking Semantics ...
Intermediate Representation: 
IPROG (
[]
,3
,[]
,IREAD_I(0,1, )
,IREAD_I(0,2, )
,IREAD_I(0,3, )
,
IBLOCK(
	[IFUN 
	("fun1"
	,[]
	,3
	,1
	,[]
	,IASS(1,2,,ISIZE(0,-4,1)[IINT 0,])
	,IASS(1,2,,ISIZE(0,-4,2)[IINT 1,])
	,IASS(1,2,,ISIZE(0,-4,3)[IINT 2,])
	,IASS(0,1,,IINT 0)
	,ICOND( IAPP(ILT,[ IID(0,1,[])],[ IID(1,2,[IINT 0,])]), 
IBLOCK(
	[]
	,0
	,0
	,[]
	,IASS(1,2,,IINT 0)
	,ICOND( IAPP(ILT,[ IID(1,2,[])],[ IID(2,2,[IINT 1,])]), 
IBLOCK(
	[]
	,0
	,0
	,[]
	,IASS(2,3,,IINT 0)
	,ICOND( IAPP(ILT,[ IID(2,3,[])],[ IID(3,2,[IINT 2,])]), 
IBLOCK(
	[]
	,0
	,0
	,[]
	,IASS(3,-4,, IAPP(IADD,[ IAPP(IADD,[ IID(3,3,[])],[ IAPP(IMUL,[ IID(3,2,[])],[ IID(4,2,[IINT 2,])])])],[ IAPP(IMUL,[ IAPP(IMUL,[ IID(3,1,[])],[ IID(4,2,[IINT 1,])])],[ IID(4,2,[IINT 2,])])])[ IID(3,1,[]), IID(3,2,[]), IID(3,3,[]),])
	,IPRINT_I( IID(3,-4,[ IID(3,1,[]), IID(3,2,[]), IID(3,3,[]),]))
	,IASS(3,3,, IAPP(IADD,[ IID(3,3,[])],[IINT 1]))
	,))
	,IASS(2,2,, IAPP(IADD,[ IID(2,2,[])],[IINT 1]))
	,))
	,IASS(1,1,, IAPP(IADD,[ IID(1,1,[])],[IINT 1]))
	,))
	,
	,IRETURN(IINT 0)
	)
]
	,3
	,0
	,[(1,[][][])(2,[])]
	, IID(1,1,[]) IID(1,2,[]) IID(1,3,[])IINT 3IASS(0,3,, IAPP(ICALL ("fun1",0), IID(0,1,[])))
	,)
,)

Semantics are good
AM file created: tests/t5.am
[dyu@localhost A5]$ AM tests/MyArrayTest5.am

M+ assembler (version 0.00)
---- Please report bugs and problems to robin@cpsc
===========================================================
M+:1
M+:2
M+:3

M+: 0

M+: 1

M+: 2

M+: 3

M+: 4

M+: 5

<<<HALT>>>

